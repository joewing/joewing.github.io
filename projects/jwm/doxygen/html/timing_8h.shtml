
<!--#set var="TITLE" value="JWM Source Documentation"-->
<!--#include virtual="../../../../head.shtml"-->
<h1><!--#echo var="TITLE"--></h1>
<p/>
<div>
<!-- Generated by Doxygen 1.8.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.shtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>Globals</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.shtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">timing.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Timing functions.  
<a href="#details">More...</a></p>

<p><a href="timing_8h_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structTimeType.shtml">TimeType</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure to represent time since January 1, 1970 GMT.  <a href="structTimeType.shtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a224830824e8aae7510677cbb1239c02d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timing_8h.shtml#a224830824e8aae7510677cbb1239c02d">ZERO_TIME</a>&#160;&#160;&#160;{ 0, 0 }</td></tr>
<tr class="memdesc:a224830824e8aae7510677cbb1239c02d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializer for <a class="el" href="structTimeType.shtml" title="Structure to represent time since January 1, 1970 GMT. ">TimeType</a> to indicate that it is not set.  <a href="#a224830824e8aae7510677cbb1239c02d">More...</a><br/></td></tr>
<tr class="separator:a224830824e8aae7510677cbb1239c02d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a6d6fd2b46ae535f320e4843637539a71"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structTimeType.shtml">TimeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timing_8h.shtml#a6d6fd2b46ae535f320e4843637539a71">TimeType</a></td></tr>
<tr class="memdesc:a6d6fd2b46ae535f320e4843637539a71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure to represent time since January 1, 1970 GMT.  <a href="#a6d6fd2b46ae535f320e4843637539a71">More...</a><br/></td></tr>
<tr class="separator:a6d6fd2b46ae535f320e4843637539a71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa7fc6870face1d8245a8260df764127e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timing_8h.shtml#aa7fc6870face1d8245a8260df764127e">GetCurrentTime</a> (<a class="el" href="structTimeType.shtml">TimeType</a> *t)</td></tr>
<tr class="memdesc:aa7fc6870face1d8245a8260df764127e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current time.  <a href="#aa7fc6870face1d8245a8260df764127e">More...</a><br/></td></tr>
<tr class="separator:aa7fc6870face1d8245a8260df764127e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c7ea34cf0891f7c50ea08104ea152b7"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timing_8h.shtml#a6c7ea34cf0891f7c50ea08104ea152b7">GetTimeDifference</a> (const <a class="el" href="structTimeType.shtml">TimeType</a> *t1, const <a class="el" href="structTimeType.shtml">TimeType</a> *t2)</td></tr>
<tr class="memdesc:a6c7ea34cf0891f7c50ea08104ea152b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the difference between two times.  <a href="#a6c7ea34cf0891f7c50ea08104ea152b7">More...</a><br/></td></tr>
<tr class="separator:a6c7ea34cf0891f7c50ea08104ea152b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b0e1f811edd23a03a83cb71698f49c4"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timing_8h.shtml#a6b0e1f811edd23a03a83cb71698f49c4">GetTimeString</a> (const char *format, const char *zone)</td></tr>
<tr class="memdesc:a6b0e1f811edd23a03a83cb71698f49c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a time string.  <a href="#a6b0e1f811edd23a03a83cb71698f49c4">More...</a><br/></td></tr>
<tr class="separator:a6b0e1f811edd23a03a83cb71698f49c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Timing functions. </p>
<dl class="section author"><dt>Author</dt><dd>Joe Wingbermuehle </dd></dl>
<dl class="section date"><dt>Date</dt><dd>2004-2006 </dd></dl>

<p>Definition in file <a class="el" href="timing_8h_source.shtml">timing.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a224830824e8aae7510677cbb1239c02d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZERO_TIME&#160;&#160;&#160;{ 0, 0 }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializer for <a class="el" href="structTimeType.shtml" title="Structure to represent time since January 1, 1970 GMT. ">TimeType</a> to indicate that it is not set. </p>

<p>Definition at line <a class="el" href="timing_8h_source.shtml#l00014">14</a> of file <a class="el" href="timing_8h_source.shtml">timing.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a6d6fd2b46ae535f320e4843637539a71"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structTimeType.shtml">TimeType</a>  <a class="el" href="structTimeType.shtml">TimeType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure to represent time since January 1, 1970 GMT. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aa7fc6870face1d8245a8260df764127e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetCurrentTime </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structTimeType.shtml">TimeType</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current time. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>The <a class="el" href="structTimeType.shtml" title="Structure to represent time since January 1, 1970 GMT. ">TimeType</a> to fill. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6c7ea34cf0891f7c50ea08104ea152b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long GetTimeDifference </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structTimeType.shtml">TimeType</a> *&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structTimeType.shtml">TimeType</a> *&#160;</td>
          <td class="paramname"><em>t2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the difference between two times. </p>
<p>Note that the times must be normalized. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">t1</td><td>The first time. </td></tr>
    <tr><td class="paramname">t2</td><td>The second time. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The difference in milliseconds (maximum of 60000 ms). </dd></dl>

</div>
</div>
<a class="anchor" id="a6b0e1f811edd23a03a83cb71698f49c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* GetTimeString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>zone</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a time string. </p>
<p>Note that the string returned is a static value and should not be deleted. Therefore, this function is not thread safe. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">format</td><td>The format to use for the string. </td></tr>
    <tr><td class="paramname">zone</td><td>The timezone in tzset() format to use (defaults to local) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The time string. </dd></dl>

</div>
</div>
</div><!-- contents -->

<!--#include virtual="../../../../tail.shtml"-->
