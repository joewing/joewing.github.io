
<!--#set var="TITLE" value="JWM Source Documentation"-->
<!--#include virtual="../../../../head.shtml"-->
<h1><!--#echo var="TITLE"--></h1>
<p/>
<div>
<!-- Generated by Doxygen 1.8.5 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.shtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>Globals</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.shtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">misc.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Miscellaneous functions and macros.  
<a href="#details">More...</a></p>

<p><a href="misc_8h_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a202767af7f06cef8e1c69d9771f157c3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#a202767af7f06cef8e1c69d9771f157c3">Min</a>(x, y)&#160;&#160;&#160;( (x) &gt; (y) ? (y) : (x) )</td></tr>
<tr class="memdesc:a202767af7f06cef8e1c69d9771f157c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the minimum of two values.  <a href="#a202767af7f06cef8e1c69d9771f157c3">More...</a><br/></td></tr>
<tr class="separator:a202767af7f06cef8e1c69d9771f157c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56957c78144b268fbcdbf7d9fb5acafe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#a56957c78144b268fbcdbf7d9fb5acafe">Max</a>(x, y)&#160;&#160;&#160;( (x) &gt; (y) ? (x) : (y) )</td></tr>
<tr class="memdesc:a56957c78144b268fbcdbf7d9fb5acafe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum of two values.  <a href="#a56957c78144b268fbcdbf7d9fb5acafe">More...</a><br/></td></tr>
<tr class="separator:a56957c78144b268fbcdbf7d9fb5acafe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a8e377a607293eb72d7b18817c26e1bec"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#a8e377a607293eb72d7b18817c26e1bec">IsSpace</a> (char ch, unsigned int *lineNumber)</td></tr>
<tr class="memdesc:a8e377a607293eb72d7b18817c26e1bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine if a character is a space character.  <a href="#a8e377a607293eb72d7b18817c26e1bec">More...</a><br/></td></tr>
<tr class="separator:a8e377a607293eb72d7b18817c26e1bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b1989d45222d67a48e5cda731ee1b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#a54b1989d45222d67a48e5cda731ee1b3">ExpandPath</a> (char **path)</td></tr>
<tr class="memdesc:a54b1989d45222d67a48e5cda731ee1b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform shell-like macro path expansion.  <a href="#a54b1989d45222d67a48e5cda731ee1b3">More...</a><br/></td></tr>
<tr class="separator:a54b1989d45222d67a48e5cda731ee1b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63bd64cffccc707581b3b8c3d6931897"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#a63bd64cffccc707581b3b8c3d6931897">Trim</a> (char *str)</td></tr>
<tr class="memdesc:a63bd64cffccc707581b3b8c3d6931897"><td class="mdescLeft">&#160;</td><td class="mdescRight">Trim leading and trailing whitespace from a string.  <a href="#a63bd64cffccc707581b3b8c3d6931897">More...</a><br/></td></tr>
<tr class="separator:a63bd64cffccc707581b3b8c3d6931897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ce3b67dd7ae516d46207eea5187c84"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#ab8ce3b67dd7ae516d46207eea5187c84">CopyString</a> (const char *str)</td></tr>
<tr class="memdesc:ab8ce3b67dd7ae516d46207eea5187c84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy a string.  <a href="#ab8ce3b67dd7ae516d46207eea5187c84">More...</a><br/></td></tr>
<tr class="separator:ab8ce3b67dd7ae516d46207eea5187c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab284b64c556ebc1b62c5e406fb8d4a78"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="misc_8h.shtml#ab284b64c556ebc1b62c5e406fb8d4a78">ParseFloat</a> (const char *str)</td></tr>
<tr class="memdesc:ab284b64c556ebc1b62c5e406fb8d4a78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a float in a locale-independent way.  <a href="#ab284b64c556ebc1b62c5e406fb8d4a78">More...</a><br/></td></tr>
<tr class="separator:ab284b64c556ebc1b62c5e406fb8d4a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Miscellaneous functions and macros. </p>
<dl class="section author"><dt>Author</dt><dd>Joe Wingbermuehle </dd></dl>
<dl class="section date"><dt>Date</dt><dd>2004-2006 </dd></dl>

<p>Definition in file <a class="el" href="misc_8h_source.shtml">misc.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a56957c78144b268fbcdbf7d9fb5acafe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (x) &gt; (y) ? (x) : (y) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum of two values. </p>

<p>Definition at line <a class="el" href="misc_8h_source.shtml#l00017">17</a> of file <a class="el" href="misc_8h_source.shtml">misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="a202767af7f06cef8e1c69d9771f157c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Min</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (x) &gt; (y) ? (y) : (x) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the minimum of two values. </p>

<p>Definition at line <a class="el" href="misc_8h_source.shtml#l00014">14</a> of file <a class="el" href="misc_8h_source.shtml">misc.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ab8ce3b67dd7ae516d46207eea5187c84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* CopyString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy a string. </p>
<p>Note that NULL is accepted. When provided NULL, NULL will be returned. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>The string to copy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A copy of the string. </dd></dl>

</div>
</div>
<a class="anchor" id="a54b1989d45222d67a48e5cda731ee1b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ExpandPath </td>
          <td>(</td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform shell-like macro path expansion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>The path to expand (possibly reallocated). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8e377a607293eb72d7b18817c26e1bec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char IsSpace </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>ch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>lineNumber</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determine if a character is a space character. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ch</td><td>The character to check. </td></tr>
    <tr><td class="paramname">lineNumber</td><td>The line number to update. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab284b64c556ebc1b62c5e406fb8d4a78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float ParseFloat </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a float in a locale-independent way. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>The string containing the float. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The float. </dd></dl>

</div>
</div>
<a class="anchor" id="a63bd64cffccc707581b3b8c3d6931897"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Trim </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Trim leading and trailing whitespace from a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>The string to trim. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->

<!--#include virtual="../../../../tail.shtml"-->
