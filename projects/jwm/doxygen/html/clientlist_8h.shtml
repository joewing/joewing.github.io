
<!--#set var="TITLE" value="JWM Source Documentation"-->
<!--#include virtual="/head.shtml"-->
<h1><!--#echo var="TITLE"--></h1>
<p/>
<div>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.shtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>Globals</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.shtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">clientlist.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Functions to manage lists of clients.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="hint_8h_source.shtml">hint.h</a>&quot;</code><br/>
</div>
<p><a href="clientlist_8h_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af874a744ec21e6a05f77726627799217"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#af874a744ec21e6a05f77726627799217">ShouldFocus</a> (const struct <a class="el" href="structClientNode.shtml">ClientNode</a> *np)</td></tr>
<tr class="memdesc:af874a744ec21e6a05f77726627799217"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine if a client is allowed focus.  <a href="#af874a744ec21e6a05f77726627799217"></a><br/></td></tr>
<tr class="separator:af874a744ec21e6a05f77726627799217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b309e93272ab89369217bd685757be2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#a4b309e93272ab89369217bd685757be2">StartWindowWalk</a> (void)</td></tr>
<tr class="memdesc:a4b309e93272ab89369217bd685757be2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start walking the window client list.  <a href="#a4b309e93272ab89369217bd685757be2"></a><br/></td></tr>
<tr class="separator:a4b309e93272ab89369217bd685757be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41717b9bc164f339bae49e6e22017eba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#a41717b9bc164f339bae49e6e22017eba">StartWindowStackWalk</a> ()</td></tr>
<tr class="memdesc:a41717b9bc164f339bae49e6e22017eba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start walking the window stack.  <a href="#a41717b9bc164f339bae49e6e22017eba"></a><br/></td></tr>
<tr class="separator:a41717b9bc164f339bae49e6e22017eba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd514d8faa7504a0e869b8c2e93411d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#aadd514d8faa7504a0e869b8c2e93411d">WalkWindowStack</a> (char forward)</td></tr>
<tr class="memdesc:aadd514d8faa7504a0e869b8c2e93411d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the next/previous window in the window stack.  <a href="#aadd514d8faa7504a0e869b8c2e93411d"></a><br/></td></tr>
<tr class="separator:aadd514d8faa7504a0e869b8c2e93411d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacce09f2ba514383da33c063a2db2250"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#aacce09f2ba514383da33c063a2db2250">StopWindowWalk</a> (void)</td></tr>
<tr class="memdesc:aacce09f2ba514383da33c063a2db2250"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop walking the window stack or client list.  <a href="#aacce09f2ba514383da33c063a2db2250"></a><br/></td></tr>
<tr class="separator:aacce09f2ba514383da33c063a2db2250"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5786f705ecf22709e40083e5b487ec50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#a5786f705ecf22709e40083e5b487ec50">FocusNextStacked</a> (struct <a class="el" href="structClientNode.shtml">ClientNode</a> *np)</td></tr>
<tr class="memdesc:a5786f705ecf22709e40083e5b487ec50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the keyboard focus to the next client.  <a href="#a5786f705ecf22709e40083e5b487ec50"></a><br/></td></tr>
<tr class="separator:a5786f705ecf22709e40083e5b487ec50"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a26672d19afbdf99e9bbacdcead0102d4"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structClientNode.shtml">ClientNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#a26672d19afbdf99e9bbacdcead0102d4">nodes</a> [<a class="el" href="hint_8h.shtml#a94bb7a5972dd8b8c9c74ff555faf599f">LAYER_COUNT</a>]</td></tr>
<tr class="memdesc:a26672d19afbdf99e9bbacdcead0102d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Client windows in linked lists for each layer.  <a href="#a26672d19afbdf99e9bbacdcead0102d4"></a><br/></td></tr>
<tr class="separator:a26672d19afbdf99e9bbacdcead0102d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7d7063c4dd10ad7fe3122d63843b464"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structClientNode.shtml">ClientNode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="clientlist_8h.shtml#ac7d7063c4dd10ad7fe3122d63843b464">nodeTail</a> [<a class="el" href="hint_8h.shtml#a94bb7a5972dd8b8c9c74ff555faf599f">LAYER_COUNT</a>]</td></tr>
<tr class="memdesc:ac7d7063c4dd10ad7fe3122d63843b464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Client windows in linked lists for each layer (pointer to the tail).  <a href="#ac7d7063c4dd10ad7fe3122d63843b464"></a><br/></td></tr>
<tr class="separator:ac7d7063c4dd10ad7fe3122d63843b464"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Functions to manage lists of clients. </p>
<dl class="section author"><dt>Author</dt><dd>Joe Wingbermuehle </dd></dl>
<dl class="section date"><dt>Date</dt><dd>2007 </dd></dl>

<p>Definition in file <a class="el" href="clientlist_8h_source.shtml">clientlist.h</a>.</p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a5786f705ecf22709e40083e5b487ec50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FocusNextStacked </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structClientNode.shtml">ClientNode</a> *&#160;</td>
          <td class="paramname"><em>np</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the keyboard focus to the next client. </p>
<p>This is used to focus the next client in the stacking order. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">np</td><td>The client before the client to focus. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af874a744ec21e6a05f77726627799217"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char ShouldFocus </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structClientNode.shtml">ClientNode</a> *&#160;</td>
          <td class="paramname"><em>np</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determine if a client is allowed focus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">np</td><td>The client. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if focus is allowed, 0 otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a41717b9bc164f339bae49e6e22017eba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StartWindowStackWalk </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start walking the window stack. </p>

</div>
</div>
<a class="anchor" id="a4b309e93272ab89369217bd685757be2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StartWindowWalk </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start walking the window client list. </p>

</div>
</div>
<a class="anchor" id="aacce09f2ba514383da33c063a2db2250"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StopWindowWalk </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop walking the window stack or client list. </p>

</div>
</div>
<a class="anchor" id="aadd514d8faa7504a0e869b8c2e93411d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void WalkWindowStack </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>forward</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move to the next/previous window in the window stack. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a26672d19afbdf99e9bbacdcead0102d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structClientNode.shtml">ClientNode</a>* nodes[<a class="el" href="hint_8h.shtml#a94bb7a5972dd8b8c9c74ff555faf599f">LAYER_COUNT</a>]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Client windows in linked lists for each layer. </p>

</div>
</div>
<a class="anchor" id="ac7d7063c4dd10ad7fe3122d63843b464"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structClientNode.shtml">ClientNode</a>* nodeTail[<a class="el" href="hint_8h.shtml#a94bb7a5972dd8b8c9c74ff555faf599f">LAYER_COUNT</a>]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Client windows in linked lists for each layer (pointer to the tail). </p>

</div>
</div>
</div><!-- contents -->

<!--#include virtual="/tail.shtml"-->
